{"ast":null,"code":"var _jsxFileName = \"/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js\",\n  _s = $RefreshSig$();\nimport { Konva } from \"konva\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KonvaBoard() {\n  _s();\n  var width = window.innerWidth;\n  var height = window.innerHeight - 25;\n  var stage;\n  var layer = new Konva.Layer();\n  stage.add(layer);\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n  useEffect(() => {\n    // first we need Konva core things: stage and layer\n    var stage = new Konva.Stage({\n      container: \"container\",\n      width: width,\n      height: height\n    });\n    stage.on(\"mousedown touchstart\", function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      lastLine = new Konva.Line({\n        stroke: \"#df4b26\",\n        strokeWidth: 5,\n        globalCompositeOperation: mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        // round cap for smoother lines\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y]\n      });\n      layer.add(lastLine);\n    });\n    stage.on(\"mouseup touchend\", function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on(\"mousemove touchmove\", function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n_s(KonvaBoard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KonvaBoard;\nvar _c;\n$RefreshReg$(_c, \"KonvaBoard\");","map":{"version":3,"names":["Konva","useEffect","jsxDEV","_jsxDEV","KonvaBoard","_s","width","window","innerWidth","height","innerHeight","stage","layer","Layer","add","isPaint","mode","lastLine","Stage","container","on","e","pos","getPointerPosition","Line","stroke","strokeWidth","globalCompositeOperation","lineCap","lineJoin","points","x","y","evt","preventDefault","newPoints","concat","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js"],"sourcesContent":["import { Konva } from \"konva\";\nimport { useEffect } from \"react\";\n\nexport default function KonvaBoard() {\n  var width = window.innerWidth;\n  var height = window.innerHeight - 25;\n  var stage;\n\n  var layer = new Konva.Layer();\n  stage.add(layer);\n\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n\n  useEffect(() => {\n    // first we need Konva core things: stage and layer\n    var stage = new Konva.Stage({\n      container: \"container\",\n      width: width,\n      height: height,\n    });\n\n    stage.on(\"mousedown touchstart\", function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      lastLine = new Konva.Line({\n        stroke: \"#df4b26\",\n        strokeWidth: 5,\n        globalCompositeOperation:\n          mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        // round cap for smoother lines\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y],\n      });\n      layer.add(lastLine);\n    });\n\n    stage.on(\"mouseup touchend\", function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on(\"mousemove touchmove\", function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n  }, []);\n\n  return <div id=\"container\"></div>;\n}\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,IAAIC,KAAK,GAAGC,MAAM,CAACC,UAAU;EAC7B,IAAIC,MAAM,GAAGF,MAAM,CAACG,WAAW,GAAG,EAAE;EACpC,IAAIC,KAAK;EAET,IAAIC,KAAK,GAAG,IAAIZ,KAAK,CAACa,KAAK,CAAC,CAAC;EAC7BF,KAAK,CAACG,GAAG,CAACF,KAAK,CAAC;EAEhB,IAAIG,OAAO,GAAG,KAAK;EACnB,IAAIC,IAAI,GAAG,OAAO;EAClB,IAAIC,QAAQ;EAEZhB,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,KAAK,GAAG,IAAIX,KAAK,CAACkB,KAAK,CAAC;MAC1BC,SAAS,EAAE,WAAW;MACtBb,KAAK,EAAEA,KAAK;MACZG,MAAM,EAAEA;IACV,CAAC,CAAC;IAEFE,KAAK,CAACS,EAAE,CAAC,sBAAsB,EAAE,UAAUC,CAAC,EAAE;MAC5CN,OAAO,GAAG,IAAI;MACd,IAAIO,GAAG,GAAGX,KAAK,CAACY,kBAAkB,CAAC,CAAC;MACpCN,QAAQ,GAAG,IAAIjB,KAAK,CAACwB,IAAI,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBC,WAAW,EAAE,CAAC;QACdC,wBAAwB,EACtBX,IAAI,KAAK,OAAO,GAAG,aAAa,GAAG,iBAAiB;QACtD;QACAY,OAAO,EAAE,OAAO;QAChBC,QAAQ,EAAE,OAAO;QACjB;QACAC,MAAM,EAAE,CAACR,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC,EAAEV,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC;MACrC,CAAC,CAAC;MACFpB,KAAK,CAACE,GAAG,CAACG,QAAQ,CAAC;IACrB,CAAC,CAAC;IAEFN,KAAK,CAACS,EAAE,CAAC,kBAAkB,EAAE,YAAY;MACvCL,OAAO,GAAG,KAAK;IACjB,CAAC,CAAC;;IAEF;IACAJ,KAAK,CAACS,EAAE,CAAC,qBAAqB,EAAE,UAAUC,CAAC,EAAE;MAC3C,IAAI,CAACN,OAAO,EAAE;QACZ;MACF;;MAEA;MACAM,CAAC,CAACY,GAAG,CAACC,cAAc,CAAC,CAAC;MAEtB,MAAMZ,GAAG,GAAGX,KAAK,CAACY,kBAAkB,CAAC,CAAC;MACtC,IAAIY,SAAS,GAAGlB,QAAQ,CAACa,MAAM,CAAC,CAAC,CAACM,MAAM,CAAC,CAACd,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC,CAAC,CAAC;MACxDf,QAAQ,CAACa,MAAM,CAACK,SAAS,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhC,OAAA;IAAKkC,EAAE,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACnC;AAACpC,EAAA,CAzDuBD,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}