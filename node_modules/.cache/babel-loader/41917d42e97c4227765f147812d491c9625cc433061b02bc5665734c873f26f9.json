{"ast":null,"code":"var _jsxFileName = \"/Users/raghavvishwanath/test-whiteboard/src/pages/PaperJSBoard/PaperJSBoard.js\",\n  _s = $RefreshSig$();\nimport styles from \"./PaperJSBoard.module.css\";\nimport Paper, { Tool } from \"paper\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaperJSBoard() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    Paper.setup(canvas);\n    var path;\n    var tool = new Tool();\n\n    // let myPath = new Paper.Path();\n\n    // Paper.view.onMouseUp = (event) => {};\n\n    // Paper.view.onMouseDown = (event) => {\n    //   myPath.strokeColor = \"#000\";\n    //   myPath.strokeWidth = 1;\n    // };\n\n    // Paper.view.onMouseDrag = (event) => {\n    //   myPath.add(event.point);\n    // };\n\n    // Paper.view.draw();\n\n    tool.minDistance = 10;\n    tool.onMouseDown = function (event) {\n      // Create a new path every time the mouse is clicked\n      path = new Paper.Path();\n      path.add(event.point);\n      path.strokeColor = \"black\";\n    };\n    tool.onMouseDrag = function (event) {\n      // Add a point to the path every time the mouse is dragged\n      path.add(event.point);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.clear,\n      onClick: () => {\n        Paper.project.activeLayer.removeChildren();\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(PaperJSBoard, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = PaperJSBoard;\nvar _c;\n$RefreshReg$(_c, \"PaperJSBoard\");","map":{"version":3,"names":["styles","Paper","Tool","useEffect","useRef","jsxDEV","_jsxDEV","PaperJSBoard","_s","canvasRef","canvas","current","width","window","innerWidth","height","innerHeight","setup","path","tool","minDistance","onMouseDown","event","Path","add","point","strokeColor","onMouseDrag","className","wrapper","children","clear","onClick","project","activeLayer","removeChildren","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","_c","$RefreshReg$"],"sources":["/Users/raghavvishwanath/test-whiteboard/src/pages/PaperJSBoard/PaperJSBoard.js"],"sourcesContent":["import styles from \"./PaperJSBoard.module.css\";\nimport Paper, { Tool } from \"paper\";\nimport { useEffect, useRef } from \"react\";\n\nexport default function PaperJSBoard() {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    Paper.setup(canvas);\n    var path;\n    var tool = new Tool();\n\n    // let myPath = new Paper.Path();\n\n    // Paper.view.onMouseUp = (event) => {};\n\n    // Paper.view.onMouseDown = (event) => {\n    //   myPath.strokeColor = \"#000\";\n    //   myPath.strokeWidth = 1;\n    // };\n\n    // Paper.view.onMouseDrag = (event) => {\n    //   myPath.add(event.point);\n    // };\n\n    // Paper.view.draw();\n\n    tool.minDistance = 10;\n\n    tool.onMouseDown = function (event) {\n      // Create a new path every time the mouse is clicked\n      path = new Paper.Path();\n      path.add(event.point);\n      path.strokeColor = \"black\";\n    };\n\n    tool.onMouseDrag = function (event) {\n      // Add a point to the path every time the mouse is dragged\n      path.add(event.point);\n    };\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={styles.clear}\n        onClick={() => {\n          Paper.project.activeLayer.removeChildren();\n        }}\n      >\n        Clear\n      </button>\n      <canvas ref={canvasRef} id=\"canvas\"></canvas>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChCD,MAAM,CAACE,KAAK,GAAGC,MAAM,CAACC,UAAU;IAChCJ,MAAM,CAACK,MAAM,GAAGF,MAAM,CAACG,WAAW;IAClCf,KAAK,CAACgB,KAAK,CAACP,MAAM,CAAC;IACnB,IAAIQ,IAAI;IACR,IAAIC,IAAI,GAAG,IAAIjB,IAAI,CAAC,CAAC;;IAErB;;IAEA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEAiB,IAAI,CAACC,WAAW,GAAG,EAAE;IAErBD,IAAI,CAACE,WAAW,GAAG,UAAUC,KAAK,EAAE;MAClC;MACAJ,IAAI,GAAG,IAAIjB,KAAK,CAACsB,IAAI,CAAC,CAAC;MACvBL,IAAI,CAACM,GAAG,CAACF,KAAK,CAACG,KAAK,CAAC;MACrBP,IAAI,CAACQ,WAAW,GAAG,OAAO;IAC5B,CAAC;IAEDP,IAAI,CAACQ,WAAW,GAAG,UAAUL,KAAK,EAAE;MAClC;MACAJ,IAAI,CAACM,GAAG,CAACF,KAAK,CAACG,KAAK,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAKsB,SAAS,EAAE5B,MAAM,CAAC6B,OAAQ;IAAAC,QAAA,gBAC7BxB,OAAA;MACEsB,SAAS,EAAE5B,MAAM,CAAC+B,KAAM;MACxBC,OAAO,EAAEA,CAAA,KAAM;QACb/B,KAAK,CAACgC,OAAO,CAACC,WAAW,CAACC,cAAc,CAAC,CAAC;MAC5C,CAAE;MAAAL,QAAA,EACH;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjC,OAAA;MAAQkC,GAAG,EAAE/B,SAAU;MAACgC,EAAE,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAAC/B,EAAA,CAtDuBD,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}