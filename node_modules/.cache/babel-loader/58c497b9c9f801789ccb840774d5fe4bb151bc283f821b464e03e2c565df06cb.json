{"ast":null,"code":"import Konva from\"konva\";import{useEffect}from\"react\";import styles from\"./KonvaBoard.module.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function KonvaBoard(){var width=window.innerWidth;var height=window.innerHeight-25;var stage;var layer;var isPaint=false;var mode=\"brush\";var lastLine;useEffect(()=>{// first we need Konva core things: stage and layer\nstage=new Konva.Stage({container:\"container\",width:width,height:height});layer=new Konva.Layer();stage.add(layer);stage.on(\"mousedown touchstart\",function(e){isPaint=true;var pos=stage.getPointerPosition();lastLine=new Konva.Line({stroke:\"#000\",strokeWidth:1,globalCompositeOperation:mode===\"brush\"?\"source-over\":\"destination-out\",// round cap for smoother lines\nlineCap:\"round\",lineJoin:\"round\",// add point twice, so we have some drawings even on a simple click\npoints:[pos.x,pos.y,pos.x,pos.y]});layer.add(lastLine);});stage.on(\"mouseup touchend\",function(){isPaint=false;});// and core function - drawing\nstage.on(\"mousemove touchmove\",function(e){if(!isPaint){return;}// prevent scrolling on touch devices\ne.evt.preventDefault();const pos=stage.getPointerPosition();var newPoints=lastLine.points().concat([pos.x,pos.y]);lastLine.points(newPoints);});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.wrapper,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.clear,onClick:()=>{stage.clear();layer.clear();},children:\"Clear\"}),/*#__PURE__*/_jsx(\"div\",{id:\"container\"})]});}","map":{"version":3,"names":["Konva","useEffect","styles","jsx","_jsx","jsxs","_jsxs","KonvaBoard","width","window","innerWidth","height","innerHeight","stage","layer","isPaint","mode","lastLine","Stage","container","Layer","add","on","e","pos","getPointerPosition","Line","stroke","strokeWidth","globalCompositeOperation","lineCap","lineJoin","points","x","y","evt","preventDefault","newPoints","concat","className","wrapper","children","clear","onClick","id"],"sources":["/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js"],"sourcesContent":["import Konva from \"konva\";\nimport { useEffect } from \"react\";\nimport styles from \"./KonvaBoard.module.css\";\n\nexport default function KonvaBoard() {\n  var width = window.innerWidth;\n  var height = window.innerHeight - 25;\n\n  var stage;\n  var layer;\n\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n\n  useEffect(() => {\n    // first we need Konva core things: stage and layer\n    stage = new Konva.Stage({\n      container: \"container\",\n      width: width,\n      height: height,\n    });\n\n    layer = new Konva.Layer();\n    stage.add(layer);\n\n    stage.on(\"mousedown touchstart\", function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      lastLine = new Konva.Line({\n        stroke: \"#000\",\n        strokeWidth: 1,\n        globalCompositeOperation:\n          mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        // round cap for smoother lines\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y],\n      });\n      layer.add(lastLine);\n    });\n\n    stage.on(\"mouseup touchend\", function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on(\"mousemove touchmove\", function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={styles.clear}\n        onClick={() => {\n          stage.clear();\n          layer.clear();\n        }}\n      >\n        Clear\n      </button>\n      <div id=\"container\"></div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,MAAM,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,cAAe,SAAS,CAAAC,UAAUA,CAAA,CAAG,CACnC,GAAI,CAAAC,KAAK,CAAGC,MAAM,CAACC,UAAU,CAC7B,GAAI,CAAAC,MAAM,CAAGF,MAAM,CAACG,WAAW,CAAG,EAAE,CAEpC,GAAI,CAAAC,KAAK,CACT,GAAI,CAAAC,KAAK,CAET,GAAI,CAAAC,OAAO,CAAG,KAAK,CACnB,GAAI,CAAAC,IAAI,CAAG,OAAO,CAClB,GAAI,CAAAC,QAAQ,CAEZhB,SAAS,CAAC,IAAM,CACd;AACAY,KAAK,CAAG,GAAI,CAAAb,KAAK,CAACkB,KAAK,CAAC,CACtBC,SAAS,CAAE,WAAW,CACtBX,KAAK,CAAEA,KAAK,CACZG,MAAM,CAAEA,MACV,CAAC,CAAC,CAEFG,KAAK,CAAG,GAAI,CAAAd,KAAK,CAACoB,KAAK,CAAC,CAAC,CACzBP,KAAK,CAACQ,GAAG,CAACP,KAAK,CAAC,CAEhBD,KAAK,CAACS,EAAE,CAAC,sBAAsB,CAAE,SAAUC,CAAC,CAAE,CAC5CR,OAAO,CAAG,IAAI,CACd,GAAI,CAAAS,GAAG,CAAGX,KAAK,CAACY,kBAAkB,CAAC,CAAC,CACpCR,QAAQ,CAAG,GAAI,CAAAjB,KAAK,CAAC0B,IAAI,CAAC,CACxBC,MAAM,CAAE,MAAM,CACdC,WAAW,CAAE,CAAC,CACdC,wBAAwB,CACtBb,IAAI,GAAK,OAAO,CAAG,aAAa,CAAG,iBAAiB,CACtD;AACAc,OAAO,CAAE,OAAO,CAChBC,QAAQ,CAAE,OAAO,CACjB;AACAC,MAAM,CAAE,CAACR,GAAG,CAACS,CAAC,CAAET,GAAG,CAACU,CAAC,CAAEV,GAAG,CAACS,CAAC,CAAET,GAAG,CAACU,CAAC,CACrC,CAAC,CAAC,CACFpB,KAAK,CAACO,GAAG,CAACJ,QAAQ,CAAC,CACrB,CAAC,CAAC,CAEFJ,KAAK,CAACS,EAAE,CAAC,kBAAkB,CAAE,UAAY,CACvCP,OAAO,CAAG,KAAK,CACjB,CAAC,CAAC,CAEF;AACAF,KAAK,CAACS,EAAE,CAAC,qBAAqB,CAAE,SAAUC,CAAC,CAAE,CAC3C,GAAI,CAACR,OAAO,CAAE,CACZ,OACF,CAEA;AACAQ,CAAC,CAACY,GAAG,CAACC,cAAc,CAAC,CAAC,CAEtB,KAAM,CAAAZ,GAAG,CAAGX,KAAK,CAACY,kBAAkB,CAAC,CAAC,CACtC,GAAI,CAAAY,SAAS,CAAGpB,QAAQ,CAACe,MAAM,CAAC,CAAC,CAACM,MAAM,CAAC,CAACd,GAAG,CAACS,CAAC,CAAET,GAAG,CAACU,CAAC,CAAC,CAAC,CACxDjB,QAAQ,CAACe,MAAM,CAACK,SAAS,CAAC,CAC5B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE/B,KAAA,QAAKiC,SAAS,CAAErC,MAAM,CAACsC,OAAQ,CAAAC,QAAA,eAC7BrC,IAAA,WACEmC,SAAS,CAAErC,MAAM,CAACwC,KAAM,CACxBC,OAAO,CAAEA,CAAA,GAAM,CACb9B,KAAK,CAAC6B,KAAK,CAAC,CAAC,CACb5B,KAAK,CAAC4B,KAAK,CAAC,CAAC,CACf,CAAE,CAAAD,QAAA,CACH,OAED,CAAQ,CAAC,cACTrC,IAAA,QAAKwC,EAAE,CAAC,WAAW,CAAM,CAAC,EACvB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}