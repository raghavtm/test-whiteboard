{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCanvasBlockColors = void 0;\nconst errors_1 = require(\"../constants/errors\");\nconst validateCanvasExtractionValues_1 = require(\"../validations/validateCanvasExtractionValues\");\nconst getCanvasBlockColors = (canvas, x, y, width, height) => {\n  if (!canvas.getContext) {\n    throw errors_1.ELEMENT_NOT_CANVAS_ERROR;\n  }\n  const ctx = canvas.getContext('2d');\n  const validatedExtractionValues = (0, validateCanvasExtractionValues_1.validateCanvasExtractionValues)({\n    x,\n    y,\n    targetHeight: height,\n    targetWidth: width,\n    canvasHeight: canvas.height,\n    canvasWidth: canvas.width\n  });\n  const imageData = ctx.getImageData(validatedExtractionValues.x, validatedExtractionValues.y, validatedExtractionValues.targetWidth, validatedExtractionValues.targetHeight).data;\n  const colorBlock = [];\n  for (let i = 0; i < imageData.length; i += 4) {\n    const color = imageData.slice(i, i + 4);\n    colorBlock.push([color[0], color[1], color[2]]);\n  }\n  return colorBlock;\n};\nexports.getCanvasBlockColors = getCanvasBlockColors;","map":{"version":3,"names":["Object","defineProperty","exports","value","getCanvasBlockColors","errors_1","require","validateCanvasExtractionValues_1","canvas","x","y","width","height","getContext","ELEMENT_NOT_CANVAS_ERROR","ctx","validatedExtractionValues","validateCanvasExtractionValues","targetHeight","targetWidth","canvasHeight","canvasWidth","imageData","getImageData","data","colorBlock","i","length","color","slice","push"],"sources":["/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/node_modules/react-eyedrop/dist/getColor/getCanvasBlockColors.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanvasBlockColors = void 0;\nconst errors_1 = require(\"../constants/errors\");\nconst validateCanvasExtractionValues_1 = require(\"../validations/validateCanvasExtractionValues\");\nconst getCanvasBlockColors = (canvas, x, y, width, height) => {\n    if (!canvas.getContext) {\n        throw errors_1.ELEMENT_NOT_CANVAS_ERROR;\n    }\n    const ctx = canvas.getContext('2d');\n    const validatedExtractionValues = (0, validateCanvasExtractionValues_1.validateCanvasExtractionValues)({\n        x,\n        y,\n        targetHeight: height,\n        targetWidth: width,\n        canvasHeight: canvas.height,\n        canvasWidth: canvas.width\n    });\n    const imageData = ctx.getImageData(validatedExtractionValues.x, validatedExtractionValues.y, validatedExtractionValues.targetWidth, validatedExtractionValues.targetHeight).data;\n    const colorBlock = [];\n    for (let i = 0; i < imageData.length; i += 4) {\n        const color = imageData.slice(i, i + 4);\n        colorBlock.push([color[0], color[1], color[2]]);\n    }\n    return colorBlock;\n};\nexports.getCanvasBlockColors = getCanvasBlockColors;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,QAAQ,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/C,MAAMC,gCAAgC,GAAGD,OAAO,CAAC,+CAA+C,CAAC;AACjG,MAAMF,oBAAoB,GAAGA,CAACI,MAAM,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,KAAK;EAC1D,IAAI,CAACJ,MAAM,CAACK,UAAU,EAAE;IACpB,MAAMR,QAAQ,CAACS,wBAAwB;EAC3C;EACA,MAAMC,GAAG,GAAGP,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;EACnC,MAAMG,yBAAyB,GAAG,CAAC,CAAC,EAAET,gCAAgC,CAACU,8BAA8B,EAAE;IACnGR,CAAC;IACDC,CAAC;IACDQ,YAAY,EAAEN,MAAM;IACpBO,WAAW,EAAER,KAAK;IAClBS,YAAY,EAAEZ,MAAM,CAACI,MAAM;IAC3BS,WAAW,EAAEb,MAAM,CAACG;EACxB,CAAC,CAAC;EACF,MAAMW,SAAS,GAAGP,GAAG,CAACQ,YAAY,CAACP,yBAAyB,CAACP,CAAC,EAAEO,yBAAyB,CAACN,CAAC,EAAEM,yBAAyB,CAACG,WAAW,EAAEH,yBAAyB,CAACE,YAAY,CAAC,CAACM,IAAI;EAChL,MAAMC,UAAU,GAAG,EAAE;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,CAACK,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC1C,MAAME,KAAK,GAAGN,SAAS,CAACO,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;IACvCD,UAAU,CAACK,IAAI,CAAC,CAACF,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD;EACA,OAAOH,UAAU;AACrB,CAAC;AACDvB,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}