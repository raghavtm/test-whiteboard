{"ast":null,"code":"var _jsxFileName = \"/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js\";\nimport { Konva } from \"konva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KonvaBoard() {\n  var width = window.innerWidth;\n  var height = window.innerHeight - 25;\n  var layer = new Konva.Layer();\n  stage.add(layer);\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n\n  // first we need Konva core things: stage and layer\n  var stage = new Konva.Stage({\n    container: \"container\",\n    width: width,\n    height: height\n  });\n  stage.on(\"mousedown touchstart\", function (e) {\n    isPaint = true;\n    var pos = stage.getPointerPosition();\n    lastLine = new Konva.Line({\n      stroke: \"#df4b26\",\n      strokeWidth: 5,\n      globalCompositeOperation: mode === \"brush\" ? \"source-over\" : \"destination-out\",\n      // round cap for smoother lines\n      lineCap: \"round\",\n      lineJoin: \"round\",\n      // add point twice, so we have some drawings even on a simple click\n      points: [pos.x, pos.y, pos.x, pos.y]\n    });\n    layer.add(lastLine);\n  });\n  stage.on(\"mouseup touchend\", function () {\n    isPaint = false;\n  });\n\n  // and core function - drawing\n  stage.on(\"mousemove touchmove\", function (e) {\n    if (!isPaint) {\n      return;\n    }\n\n    // prevent scrolling on touch devices\n    e.evt.preventDefault();\n    const pos = stage.getPointerPosition();\n    var newPoints = lastLine.points().concat([pos.x, pos.y]);\n    lastLine.points(newPoints);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_c = KonvaBoard;\nvar _c;\n$RefreshReg$(_c, \"KonvaBoard\");","map":{"version":3,"names":["Konva","jsxDEV","_jsxDEV","KonvaBoard","width","window","innerWidth","height","innerHeight","layer","Layer","stage","add","isPaint","mode","lastLine","Stage","container","on","e","pos","getPointerPosition","Line","stroke","strokeWidth","globalCompositeOperation","lineCap","lineJoin","points","x","y","evt","preventDefault","newPoints","concat","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js"],"sourcesContent":["import { Konva } from \"konva\";\n\nexport default function KonvaBoard() {\n  var width = window.innerWidth;\n  var height = window.innerHeight - 25;\n\n  var layer = new Konva.Layer();\n  stage.add(layer);\n\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n\n  // first we need Konva core things: stage and layer\n  var stage = new Konva.Stage({\n    container: \"container\",\n    width: width,\n    height: height,\n  });\n\n  stage.on(\"mousedown touchstart\", function (e) {\n    isPaint = true;\n    var pos = stage.getPointerPosition();\n    lastLine = new Konva.Line({\n      stroke: \"#df4b26\",\n      strokeWidth: 5,\n      globalCompositeOperation:\n        mode === \"brush\" ? \"source-over\" : \"destination-out\",\n      // round cap for smoother lines\n      lineCap: \"round\",\n      lineJoin: \"round\",\n      // add point twice, so we have some drawings even on a simple click\n      points: [pos.x, pos.y, pos.x, pos.y],\n    });\n    layer.add(lastLine);\n  });\n\n  stage.on(\"mouseup touchend\", function () {\n    isPaint = false;\n  });\n\n  // and core function - drawing\n  stage.on(\"mousemove touchmove\", function (e) {\n    if (!isPaint) {\n      return;\n    }\n\n    // prevent scrolling on touch devices\n    e.evt.preventDefault();\n\n    const pos = stage.getPointerPosition();\n    var newPoints = lastLine.points().concat([pos.x, pos.y]);\n    lastLine.points(newPoints);\n  });\n\n  return <div id=\"container\"></div>;\n}\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAIC,KAAK,GAAGC,MAAM,CAACC,UAAU;EAC7B,IAAIC,MAAM,GAAGF,MAAM,CAACG,WAAW,GAAG,EAAE;EAEpC,IAAIC,KAAK,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;EAC7BC,KAAK,CAACC,GAAG,CAACH,KAAK,CAAC;EAEhB,IAAII,OAAO,GAAG,KAAK;EACnB,IAAIC,IAAI,GAAG,OAAO;EAClB,IAAIC,QAAQ;;EAEZ;EACA,IAAIJ,KAAK,GAAG,IAAIX,KAAK,CAACgB,KAAK,CAAC;IAC1BC,SAAS,EAAE,WAAW;IACtBb,KAAK,EAAEA,KAAK;IACZG,MAAM,EAAEA;EACV,CAAC,CAAC;EAEFI,KAAK,CAACO,EAAE,CAAC,sBAAsB,EAAE,UAAUC,CAAC,EAAE;IAC5CN,OAAO,GAAG,IAAI;IACd,IAAIO,GAAG,GAAGT,KAAK,CAACU,kBAAkB,CAAC,CAAC;IACpCN,QAAQ,GAAG,IAAIf,KAAK,CAACsB,IAAI,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBC,WAAW,EAAE,CAAC;MACdC,wBAAwB,EACtBX,IAAI,KAAK,OAAO,GAAG,aAAa,GAAG,iBAAiB;MACtD;MACAY,OAAO,EAAE,OAAO;MAChBC,QAAQ,EAAE,OAAO;MACjB;MACAC,MAAM,EAAE,CAACR,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC,EAAEV,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC;IACrC,CAAC,CAAC;IACFrB,KAAK,CAACG,GAAG,CAACG,QAAQ,CAAC;EACrB,CAAC,CAAC;EAEFJ,KAAK,CAACO,EAAE,CAAC,kBAAkB,EAAE,YAAY;IACvCL,OAAO,GAAG,KAAK;EACjB,CAAC,CAAC;;EAEF;EACAF,KAAK,CAACO,EAAE,CAAC,qBAAqB,EAAE,UAAUC,CAAC,EAAE;IAC3C,IAAI,CAACN,OAAO,EAAE;MACZ;IACF;;IAEA;IACAM,CAAC,CAACY,GAAG,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMZ,GAAG,GAAGT,KAAK,CAACU,kBAAkB,CAAC,CAAC;IACtC,IAAIY,SAAS,GAAGlB,QAAQ,CAACa,MAAM,CAAC,CAAC,CAACM,MAAM,CAAC,CAACd,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC,CAAC,CAAC;IACxDf,QAAQ,CAACa,MAAM,CAACK,SAAS,CAAC;EAC5B,CAAC,CAAC;EAEF,oBAAO/B,OAAA;IAAKiC,EAAE,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACnC;AAACC,EAAA,GAtDuBrC,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}