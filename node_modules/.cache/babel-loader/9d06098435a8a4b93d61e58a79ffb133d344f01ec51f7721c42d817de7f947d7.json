{"ast":null,"code":"var _jsxFileName = \"/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js\",\n  _s = $RefreshSig$();\nimport Konva from \"konva\";\nimport { useEffect } from \"react\";\nimport styles from \"./KonvaBoard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KonvaBoard() {\n  _s();\n  // var width = window.innerWidth;\n  // var height = window.innerHeight - 25;\n\n  var width = 1000;\n  var height = 500;\n  var stage;\n  var layer;\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n  useEffect(() => {\n    // first we need Konva core things: stage and layer\n    stage = new Konva.Stage({\n      container: \"container\",\n      width: width,\n      height: height\n    });\n    layer = new Konva.Layer();\n    stage.add(layer);\n    stage.on(\"mousedown touchstart\", function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      lastLine = new Konva.Line({\n        stroke: \"#000\",\n        strokeWidth: 1,\n        globalCompositeOperation: mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        // round cap for smoother lines\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y]\n      });\n      layer.add(lastLine);\n    });\n    stage.on(\"mouseup touchend\", function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on(\"mousemove touchmove\", function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.clear,\n      onClick: () => {\n        stage.clear();\n        layer.clear();\n      },\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(KonvaBoard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KonvaBoard;\nvar _c;\n$RefreshReg$(_c, \"KonvaBoard\");","map":{"version":3,"names":["Konva","useEffect","styles","jsxDEV","_jsxDEV","KonvaBoard","_s","width","height","stage","layer","isPaint","mode","lastLine","Stage","container","Layer","add","on","e","pos","getPointerPosition","Line","stroke","strokeWidth","globalCompositeOperation","lineCap","lineJoin","points","x","y","evt","preventDefault","newPoints","concat","className","wrapper","children","clear","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/akhilakonam/Documents/TestWhiteboard/test-whiteboard/src/pages/KonvaBoard/KonvaBoard.js"],"sourcesContent":["import Konva from \"konva\";\nimport { useEffect } from \"react\";\nimport styles from \"./KonvaBoard.module.css\";\n\nexport default function KonvaBoard() {\n  // var width = window.innerWidth;\n  // var height = window.innerHeight - 25;\n\n  var width = 1000;\n  var height = 500;\n  var stage;\n  var layer;\n\n  var isPaint = false;\n  var mode = \"brush\";\n  var lastLine;\n\n  useEffect(() => {\n    // first we need Konva core things: stage and layer\n    stage = new Konva.Stage({\n      container: \"container\",\n      width: width,\n      height: height,\n    });\n\n    layer = new Konva.Layer();\n    stage.add(layer);\n\n    stage.on(\"mousedown touchstart\", function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      lastLine = new Konva.Line({\n        stroke: \"#000\",\n        strokeWidth: 1,\n        globalCompositeOperation:\n          mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        // round cap for smoother lines\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y],\n      });\n      layer.add(lastLine);\n    });\n\n    stage.on(\"mouseup touchend\", function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on(\"mousemove touchmove\", function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={styles.clear}\n        onClick={() => {\n          stage.clear();\n          layer.clear();\n        }}\n      >\n        Clear\n      </button>\n      <div id=\"container\"></div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}